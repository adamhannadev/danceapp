<% content_for :title, "Enroll #{@user.full_name} in Dance Style & Level" %>

<div class="container-fluid">
  <!-- Header Section -->
  <div class="row mb-4">
    <div class="col-12">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><%= link_to "Dashboard", dashboard_path %></li>
          <li class="breadcrumb-item"><%= link_to "All Students", all_students_student_progress_index_path %></li>
          <li class="breadcrumb-item"><%= link_to "#{@user.full_name}'s Progress", admin_user_student_progress_index_path(@user) %></li>
          <li class="breadcrumb-item active" aria-current="page">Enroll in Style & Level</li>
        </ol>
      </nav>
      
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h1 class="h3 mb-1">
            <i class="fas fa-user-plus me-2 text-primary"></i>
            Enroll Student in Dance Style & Level
          </h1>
          <p class="text-muted mb-0">
            Add figures to <strong><%= @user.full_name %></strong>'s progress by enrolling them in a specific dance style and level
          </p>
        </div>
      </div>
    </div>
  </div>

  <div class="row justify-content-center">
    <div class="col-lg-8">
      <!-- Student Info Card -->
      <div class="card card-ballroom mb-4">
        <div class="card-header">
          <h5 class="mb-0">
            <i class="fas fa-user me-2"></i>Student Information
          </h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <h6 class="text-muted mb-1">Name</h6>
              <p class="mb-2"><%= @user.full_name %></p>
            </div>
            <div class="col-md-6">
              <h6 class="text-muted mb-1">Email</h6>
              <p class="mb-2"><%= @user.email %></p>
            </div>
            <div class="col-md-6">
              <h6 class="text-muted mb-1">Membership Type</h6>
              <p class="mb-2">
                <span class="badge <%= @user.membership_type == 'monthly' ? 'bg-success' : 'bg-secondary' %>">
                  <%= @user.membership_type.humanize %>
                </span>
              </p>
            </div>
            <div class="col-md-6">
              <h6 class="text-muted mb-1">Current Progress Count</h6>
              <p class="mb-2">
                <span class="badge bg-primary">
                  <%= @user.student_progresses.count %> figures
                </span>
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Enrollment Form -->
      <div class="card card-ballroom">
        <div class="card-header">
          <h5 class="mb-0">
            <i class="fas fa-graduation-cap me-2"></i>Select Dance Style & Level
          </h5>
        </div>
        <div class="card-body">
          <%= form_with url: enroll_admin_user_student_progress_index_path(@user), method: :post, local: true, class: "needs-validation", novalidate: true do |form| %>
            <div class="row">
              <div class="col-md-6 mb-3">
                <%= form.label :dance_style_ids, "Dance Styles", class: "form-label fw-medium" %>
                <div class="form-control" style="height: auto; max-height: 200px; overflow-y: auto;">
                  <% @enrollment_form_data[:dance_styles].each do |category, styles| %>
                    <div class="mb-2">
                      <h6 class="text-muted mb-1" style="font-size: 0.8rem; font-weight: bold;"><%= category.upcase %></h6>
                      <% styles.each do |style| %>
                        <div class="form-check">
                          <%= check_box_tag "dance_style_ids[]", style.id, false, 
                              id: "dance_style_#{style.id}", 
                              class: "form-check-input style-checkbox", 
                              data: { category: category.downcase } %>
                          <%= label_tag "dance_style_#{style.id}", style.name, class: "form-check-label" %>
                        </div>
                      <% end %>
                    </div>
                  <% end %>
                </div>
                <div class="invalid-feedback">Please select at least one dance style.</div>
                <div class="form-text">Select multiple styles - students will be enrolled in all selected styles</div>
              </div>
              
              <div class="col-md-6 mb-3">
                <%= form.label :dance_level_ids, "Dance Levels", class: "form-label fw-medium" %>
                <div class="form-control" style="height: auto; max-height: 200px; overflow-y: auto;">
                  <% @enrollment_form_data[:dance_levels].each do |category, levels| %>
                    <div class="mb-2">
                      <h6 class="text-muted mb-1" style="font-size: 0.8rem; font-weight: bold;"><%= category.upcase %></h6>
                      <% levels.each do |level| %>
                        <div class="form-check">
                          <%= check_box_tag "dance_level_ids[]", level.id, false, 
                              id: "dance_level_#{level.id}", 
                              class: "form-check-input level-checkbox", 
                              data: { category: category.downcase } %>
                          <%= label_tag "dance_level_#{level.id}", level.name, class: "form-check-label" %>
                        </div>
                      <% end %>
                    </div>
                  <% end %>
                </div>
                <div class="invalid-feedback">Please select at least one dance level.</div>
                <div class="form-text">Select multiple levels - students will be enrolled in all selected levels</div>
              </div>
            </div>
            
            <!-- Quick Selection Helper -->
            <div class="mb-4">
              <h6 class="text-muted mb-3">
                <i class="fas fa-magic me-2"></i>Quick Category Selection
              </h6>
              <div class="row g-2">
                <!-- Dance Style Categories -->
                <div class="col-md-6">
                  <div class="card bg-light border-0">
                    <div class="card-body py-2">
                      <h6 class="card-title text-muted mb-2" style="font-size: 0.8rem;">DANCE STYLE CATEGORIES</h6>
                      <div class="d-flex flex-wrap gap-1">
                        <% @enrollment_form_data[:dance_styles].each do |category, styles| %>
                          <button type="button" class="btn btn-sm btn-outline-primary style-category-btn" 
                                  data-category="<%= category.downcase %>" 
                                  data-styles="<%= styles.map(&:id).join(',') %>">
                            <%= category.split.last %>
                          </button>
                        <% end %>
                        <button type="button" class="btn btn-sm btn-outline-warning" id="select-all-styles">
                          Select All
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-secondary" id="clear-all-styles">
                          Clear All
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Dance Level Categories -->
                <div class="col-md-6">
                  <div class="card bg-light border-0">
                    <div class="card-body py-2">
                      <h6 class="card-title text-muted mb-2" style="font-size: 0.8rem;">DANCE LEVEL CATEGORIES</h6>
                      <div class="d-flex flex-wrap gap-1">
                        <% @enrollment_form_data[:dance_levels].each do |category, levels| %>
                          <button type="button" class="btn btn-sm btn-outline-success level-category-btn" 
                                  data-category="<%= category.downcase %>" 
                                  data-levels="<%= levels.map(&:id).join(',') %>">
                            <%= category %>
                          </button>
                        <% end %>
                        <button type="button" class="btn btn-sm btn-outline-warning" id="select-all-levels">
                          Select All
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-secondary" id="clear-all-levels">
                          Clear All
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="mb-4">
              <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>
                <strong>What happens when you enroll:</strong>
                <ul class="mb-0 mt-2">
                  <li>All figures for the selected style(s) and level(s) will be added to the student's progress</li>
                  <li>Progress will be initially set to "not passed" for all components (Movement, Timing, Partnering)</li>
                  <li>You can then individually mark progress for each figure</li>
                  <li>If the student is already enrolled in some figures, only new figures will be added</li>
                  <li>Multiple styles and levels can be selected to enroll the student in several combinations at once</li>
                </ul>
              </div>
            </div>
            
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
              <%= link_to admin_user_student_progress_index_path(@user), 
                          class: "btn btn-outline-secondary me-md-2" do %>
                <i class="fas fa-arrow-left me-2"></i>Cancel
              <% end %>
              
              <%= form.submit "Enroll Student", 
                  class: "btn btn-primary",
                  id: "enroll-submit-btn",
                  data: { 
                    confirm: "Are you sure you want to enroll #{@user.full_name} in the selected dance style(s) and level(s)? This will add all figures for those combinations to their progress." 
                  } %>
            </div>
          <% end %>
        </div>
      </div>

      <!-- Current Enrollments Preview -->
      <div class="card card-ballroom mt-4 mb-4">
        <div class="card-header">
          <h6 class="mb-0">
            <i class="fas fa-list me-2"></i>Current Enrollments
          </h6>
        </div>
        <div class="card-body">
          <% current_enrollments = @user.student_progresses.joins(figure: [:dance_style, :dance_level])
                                           .group('dance_styles.name, dance_levels.name')
                                           .count %>
          <% if current_enrollments.any? %>
            <div class="row">
              <% current_enrollments.each do |(style, level), count| %>
                <div class="col-md-6 mb-2">
                  <div class="d-flex justify-content-between align-items-center">
                    <span><strong><%= style %></strong> - <%= level %></span>
                    <span class="badge bg-secondary"><%= count %> figures</span>
                  </div>
                </div>
              <% end %>
            </div>
          <% else %>
            <p class="text-muted mb-0">
              <i class="fas fa-info-circle me-2"></i>
              No current enrollments. This will be the student's first dance style and level.
            </p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.category-btn {
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  transition: all 0.15s ease-in-out;
}

.category-btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.category-info {
  animation: fadeIn 0.3s ease-in;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-5px); }
  to { opacity: 1; transform: translateY(0); }
}

.form-select optgroup {
  font-weight: bold;
  color: #6c757d;
  background-color: #f8f9fa;
}

.form-select optgroup option {
  font-weight: normal;
  color: #212529;
  background-color: white;
  padding-left: 1rem;
}

.card-ballroom {
  border: none;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  transition: box-shadow 0.15s ease-in-out;
}

.card-ballroom:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

/* Enhanced checkbox styling */
.form-check {
  padding-left: 1.8rem;
  margin-bottom: 0.5rem;
}

.form-check-input {
  margin-left: -1.8rem;
  margin-top: 0.25rem;
  transform: scale(1.1);
}

.form-check-input:checked {
  background-color: #0d6efd;
  border-color: #0d6efd;
}

.form-check-input:focus {
  border-color: #86b7fe;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

.form-check-label {
  font-size: 0.9rem;
  color: #495057;
  cursor: pointer;
  user-select: none;
}

.form-check-label:hover {
  color: #0d6efd;
}

/* Level category headers */
.form-control h6 {
  border-bottom: 1px solid #e9ecef;
  padding-bottom: 0.25rem;
  margin-bottom: 0.5rem;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
}

/* Scrollable level container */
.form-control {
  border: 2px dashed #dee2e6;
  background-color: #f8f9fa;
}

.form-control:focus-within {
  border-color: #0d6efd;
  background-color: #ffffff;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

/* Button animations */
.btn {
  transition: all 0.2s ease-in-out;
}

.btn:active {
  transform: scale(0.98);
}

/* Quick selection button animations */
.style-category-btn, .level-category-btn {
  position: relative;
  overflow: hidden;
}

.style-category-btn:before, .level-category-btn:before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.style-category-btn:active:before, .level-category-btn:active:before {
  width: 300px;
  height: 300px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Add form validation
  const forms = document.querySelectorAll('.needs-validation');
  Array.from(forms).forEach(form => {
    form.addEventListener('submit', event => {
      // Check if at least one dance level and style is selected
      const levelCheckboxes = form.querySelectorAll('input[name="dance_level_ids[]"]:checked');
      const styleCheckboxes = form.querySelectorAll('input[name="dance_style_ids[]"]:checked');
      
      let isValid = true;
      
      // Validate dance style selection
      if (styleCheckboxes.length === 0) {
        isValid = false;
        // Show error for style selection
        const styleContainer = form.querySelector('.style-checkbox').closest('.form-control');
        styleContainer.classList.add('is-invalid');
      } else {
        const styleContainer = form.querySelector('.style-checkbox').closest('.form-control');
        styleContainer.classList.remove('is-invalid');
      }
      
      // Validate dance level selection
      if (levelCheckboxes.length === 0) {
        isValid = false;
        // Show error for level selection
        const levelContainer = form.querySelector('.level-checkbox').closest('.form-control');
        levelContainer.classList.add('is-invalid');
      } else {
        const levelContainer = form.querySelector('.level-checkbox').closest('.form-control');
        levelContainer.classList.remove('is-invalid');
      }
      
      if (!isValid) {
        event.preventDefault();
        event.stopPropagation();
      }
      
      form.classList.add('was-validated');
    });
  });

  // Dance Style Category Selection
  document.querySelectorAll('.style-category-btn').forEach(button => {
    button.addEventListener('click', function() {
      const category = this.getAttribute('data-category');
      const styleIds = this.getAttribute('data-styles').split(',');
      
      // Toggle selection of all styles in this category
      styleIds.forEach(styleId => {
        if (styleId) {
          const checkbox = document.getElementById(`dance_style_${styleId}`);
          if (checkbox) {
            checkbox.checked = !checkbox.checked;
          }
        }
      });
      
      // Visual feedback
      updateStyleCategoryButtons();
      updateFormValidation();
      
      // Update the button text to show selected/deselected
      const selectedInCategory = styleIds.filter(styleId => {
        const checkbox = document.getElementById(`dance_style_${styleId}`);
        return checkbox && checkbox.checked;
      }).length;
      
      if (selectedInCategory === styleIds.filter(id => id).length) {
        this.textContent = `${this.getAttribute('data-category')} ✓`;
        this.classList.remove('btn-outline-primary');
        this.classList.add('btn-primary');
      } else if (selectedInCategory > 0) {
        this.textContent = `${this.getAttribute('data-category')} (${selectedInCategory})`;
        this.classList.remove('btn-outline-primary', 'btn-primary');
        this.classList.add('btn-warning');
      } else {
        this.textContent = this.getAttribute('data-category');
        this.classList.remove('btn-primary', 'btn-warning');
        this.classList.add('btn-outline-primary');
      }
    });
  });

  // Dance Level Category Selection
  document.querySelectorAll('.level-category-btn').forEach(button => {
    button.addEventListener('click', function() {
      const category = this.getAttribute('data-category');
      const levelIds = this.getAttribute('data-levels').split(',');
      
      // Toggle selection of all levels in this category
      levelIds.forEach(levelId => {
        if (levelId) {
          const checkbox = document.getElementById(`dance_level_${levelId}`);
          if (checkbox) {
            checkbox.checked = !checkbox.checked;
          }
        }
      });
      
      // Visual feedback
      updateCategoryButton(this, '.level-category-btn', 'btn-success', 'btn-outline-success');
      
      // Update the button text to show selected/deselected
      const selectedInCategory = levelIds.filter(levelId => {
        const checkbox = document.getElementById(`dance_level_${levelId}`);
        return checkbox && checkbox.checked;
      }).length;
      
      if (selectedInCategory === levelIds.filter(id => id).length) {
        this.textContent = `${this.getAttribute('data-category')} ✓`;
        this.classList.remove('btn-outline-success');
        this.classList.add('btn-success');
      } else if (selectedInCategory > 0) {
        this.textContent = `${this.getAttribute('data-category')} (${selectedInCategory})`;
        this.classList.remove('btn-outline-success', 'btn-success');
        this.classList.add('btn-warning');
      } else {
        this.textContent = this.getAttribute('data-category');
        this.classList.remove('btn-success', 'btn-warning');
        this.classList.add('btn-outline-success');
      }
      
      updateFormValidation();
    });
  });

  // Select All Styles button
  document.getElementById('select-all-styles').addEventListener('click', function() {
    const allCheckboxes = document.querySelectorAll('.style-checkbox');
    allCheckboxes.forEach(checkbox => {
      checkbox.checked = true;
    });
    updateStyleCategoryButtons();
    updateFormValidation();
    
    // Visual feedback
    this.classList.remove('btn-outline-warning');
    this.classList.add('btn-warning');
    setTimeout(() => {
      this.classList.remove('btn-warning');
      this.classList.add('btn-outline-warning');
    }, 300);
  });

  // Clear All Styles button
  document.getElementById('clear-all-styles').addEventListener('click', function() {
    const allCheckboxes = document.querySelectorAll('.style-checkbox');
    allCheckboxes.forEach(checkbox => {
      checkbox.checked = false;
    });
    updateStyleCategoryButtons();
    updateFormValidation();
    
    // Visual feedback
    this.classList.remove('btn-outline-secondary');
    this.classList.add('btn-secondary');
    setTimeout(() => {
      this.classList.remove('btn-secondary');
      this.classList.add('btn-outline-secondary');
    }, 300);
  });

  // Select All Levels button
  document.getElementById('select-all-levels').addEventListener('click', function() {
    const allCheckboxes = document.querySelectorAll('.level-checkbox');
    allCheckboxes.forEach(checkbox => {
      checkbox.checked = true;
    });
    updateLevelCategoryButtons();
    updateFormValidation();
    
    // Visual feedback
    this.classList.remove('btn-outline-warning');
    this.classList.add('btn-warning');
    setTimeout(() => {
      this.classList.remove('btn-warning');
      this.classList.add('btn-outline-warning');
    }, 300);
  });

  // Clear All Levels button
  document.getElementById('clear-all-levels').addEventListener('click', function() {
    const allCheckboxes = document.querySelectorAll('.level-checkbox');
    allCheckboxes.forEach(checkbox => {
      checkbox.checked = false;
    });
    updateLevelCategoryButtons();
    updateFormValidation();
    
    // Visual feedback
    this.classList.remove('btn-outline-secondary');
    this.classList.add('btn-secondary');
    setTimeout(() => {
      this.classList.remove('btn-secondary');
      this.classList.add('btn-outline-secondary');
    }, 300);
  });

  // Update category buttons when individual checkboxes change
  document.querySelectorAll('.style-checkbox').forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      updateStyleCategoryButtons();
      updateFormValidation();
    });
  });

  document.querySelectorAll('.level-checkbox').forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      updateLevelCategoryButtons();
      updateFormValidation();
    });
  });

  // Helper Functions
  function updateCategoryButton(activeButton, selector, activeClass, inactiveClass) {
    // Reset all buttons in this group
    document.querySelectorAll(selector).forEach(btn => {
      btn.classList.remove(activeClass);
      btn.classList.add(inactiveClass);
    });
    
    // Activate clicked button
    activeButton.classList.remove(inactiveClass);
    activeButton.classList.add(activeClass);
  }

  function updateStyleCategoryButtons() {
    document.querySelectorAll('.style-category-btn').forEach(button => {
      const category = button.getAttribute('data-category');
      const styleIds = button.getAttribute('data-styles').split(',');
      
      const selectedInCategory = styleIds.filter(styleId => {
        const checkbox = document.getElementById(`dance_style_${styleId}`);
        return checkbox && checkbox.checked;
      }).length;
      
      const totalInCategory = styleIds.filter(id => id).length;
      
      if (selectedInCategory === totalInCategory && totalInCategory > 0) {
        button.textContent = `${category} ✓`;
        button.classList.remove('btn-outline-primary', 'btn-warning');
        button.classList.add('btn-primary');
      } else if (selectedInCategory > 0) {
        button.textContent = `${category} (${selectedInCategory})`;
        button.classList.remove('btn-outline-primary', 'btn-primary');
        button.classList.add('btn-warning');
      } else {
        button.textContent = category;
        button.classList.remove('btn-primary', 'btn-warning');
        button.classList.add('btn-outline-primary');
      }
    });
  }

  function updateLevelCategoryButtons() {
    document.querySelectorAll('.level-category-btn').forEach(button => {
      const category = button.getAttribute('data-category');
      const levelIds = button.getAttribute('data-levels').split(',');
      
      const selectedInCategory = levelIds.filter(levelId => {
        const checkbox = document.getElementById(`dance_level_${levelId}`);
        return checkbox && checkbox.checked;
      }).length;
      
      const totalInCategory = levelIds.filter(id => id).length;
      
      if (selectedInCategory === totalInCategory && totalInCategory > 0) {
        button.textContent = `${category} ✓`;
        button.classList.remove('btn-outline-success', 'btn-warning');
        button.classList.add('btn-success');
      } else if (selectedInCategory > 0) {
        button.textContent = `${category} (${selectedInCategory})`;
        button.classList.remove('btn-outline-success', 'btn-success');
        button.classList.add('btn-warning');
      } else {
        button.textContent = category;
        button.classList.remove('btn-success', 'btn-warning');
        button.classList.add('btn-outline-success');
      }
    });
  }

  function updateFormValidation() {
    const levelCheckboxes = document.querySelectorAll('input[name="dance_level_ids[]"]:checked');
    const styleCheckboxes = document.querySelectorAll('input[name="dance_style_ids[]"]:checked');
    
    // Validate levels
    const levelContainer = document.querySelector('.level-checkbox').closest('.form-control');
    if (levelCheckboxes.length > 0) {
      levelContainer.classList.remove('is-invalid');
      levelContainer.classList.add('is-valid');
    } else {
      levelContainer.classList.remove('is-valid');
    }
    
    // Validate styles
    const styleContainer = document.querySelector('.style-checkbox').closest('.form-control');
    if (styleCheckboxes.length > 0) {
      styleContainer.classList.remove('is-invalid');
      styleContainer.classList.add('is-valid');
    } else {
      styleContainer.classList.remove('is-valid');
    }
  }

  function showCategoryInfo(targetElement, category, items, type) {
    // Remove existing info
    const existingInfo = targetElement.parentElement.querySelector('.category-info');
    if (existingInfo) {
      existingInfo.remove();
    }
    
    // Create new info
    const infoDiv = document.createElement('div');
    infoDiv.className = 'category-info mt-2 p-2 bg-light rounded border';
    infoDiv.innerHTML = `
      <small class="text-muted">
        <strong>${category}</strong> selected
      </small>
    `;
    
    targetElement.parentElement.appendChild(infoDiv);
    
    // Auto-remove after 3 seconds
    setTimeout(() => {
      if (infoDiv && infoDiv.parentElement) {
        infoDiv.remove();
      }
    }, 3000);
  }

  // Initialize category button states
  updateStyleCategoryButtons();
  updateLevelCategoryButtons();
});
</script>
